#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

Resources:
  FHIRServicePrivate:
    Type: AWS::ApiGateway::RestApi
    Condition: isUsingPrivateApi
    DependsOn:
      - ApiGatewayRestApi
      - ApiGatewayMethodMetadataGet
      - FhirServerLambdaFunction
      - FhirServerProvConcLambdaAlias
    Properties:
      Name: !Join ['-', [!Ref Stage, fhir, service, private]]
      Description: "Private FHIR API Server"
      CloneFrom: !Ref ApiGatewayRestApi
      EndpointConfiguration:
        Types:
          - PRIVATE
      Policy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 'execute-api:Invoke'
            Resource: 'execute-api:/*/*/*'
            Condition: 
              StringEquals:
                  "aws:PrincipalOrgID": !Sub '${self:custom.privateOrgId}'
  
  FHIRServiceStageDeployment:
    Type: AWS::ApiGateway::Deployment
    Condition: isUsingPrivateApi
    DependsOn:
      - FHIRServicePrivate
      - FhirServerLambdaFunction
      - FhirServerProvConcLambdaAlias
    Properties: 
      RestApiId: !Ref FHIRServicePrivate
      StageName: !Ref Stage
      StageDescription:
        AccessLogSetting:
          DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
          Format: ${self:provider.logs.restApi.format}
        TracingEnabled: ${self:provider.tracing.apiGateway}

  #FHIRServicePrivateStage:
  #  Type: AWS::ApiGateway::Stage
  #  Condition: isUsingPrivateApi
  #  DependsOn:
  #    - FHIRServicePrivate
  #    - FhirServerLambdaFunction
  #    - FhirServerProvConcLambdaAlias
  #    - FHIRServiceStageDeployment
  #  Properties:
  #    RestApiId: !Ref FHIRServicePrivate
  #    StageName: !Ref Stage
  #    DeploymentId: !Ref FHIRServiceStageDeployment
      #AccessLogSetting:
      #  DestinationArn: !GetAtt FHIRLogsBucket.Arn
      #  Format: ${self:provider.logs.restApi.format}
      #TracingEnabled: ${self:provider.tracing.apiGateway}

  FHIRServicePrivateLambdaPermission:
    Type: AWS::Lambda::Permission
    Condition: isUsingPrivateApi
    DependsOn:
      - FHIRServicePrivate
      - FhirServerLambdaFunction
      - FhirServerProvConcLambdaAlias
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref FhirServerProvConcLambdaAlias
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Join ['', ['arn:', !Sub "${AWS::Partition}", ':execute-api:', !Sub "${AWS::Region}", ':', !Sub "${AWS::AccountId}", ':', !Ref FHIRServicePrivate, '/*/*']]