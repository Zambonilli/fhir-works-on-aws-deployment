#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

Resources:
  DDBToESErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reaon: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm when the Stream errors is more than 1 unit for 15 minutes out of the past 25 minutes. Streams do have retry logic
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, DDBToESLambdaErrorAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref DdbToEsLambdaFunction
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Unit: Count  
  DDBToESIteratorAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm if the oldest record in the batch when processed was older than 1 minute.
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, DDBToESIteratorAgeAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      MetricName: IteratorAge 
      Dimensions:
        - Name: FunctionName
          Value: !Ref DdbToEsLambdaFunction
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Average
      Threshold: 60
      TreatMissingData: notBreaching
      Unit: Seconds
  DdbToEsDLQDepthAlarm: 
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties: 
      AlarmDescription: Alarm if queue depth increases to >= 1 messages
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, DDBToESDLQDepthAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions: 
        - Name: QueueName
          Value: !GetAtt DdbToEsDLQ.QueueName
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      Threshold: 0
      Unit: Count
  FhirLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm when Fhir errors is more than 1
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, FhirLambdaErrorAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref FhirServerLambdaFunction
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Unit: Count
  FhirLambdaLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm when Fhir average latency is more than 2.5s; 2 times
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirLambdaLatencyAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      MetricName: Duration
      Dimensions:
        - Name: FunctionName
          Value: !Ref FhirServerLambdaFunction
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Average
      Threshold: 2500
      TreatMissingData: notBreaching
      Unit: Milliseconds
  ApiGateway5XXErrorAlarm:
    DependsOn: ApiGatewayRestApi
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm when Api GW has more than 1 5xx errors; 3 times
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, ApiGateway5XXErrorAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Join ['-', [!Ref Stage, '${self:service}']]
      Namespace: AWS/ApiGateway
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Unit: Count
  ApiGateway4XXErrorAlarm:
    DependsOn: ApiGatewayRestApi
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm when Api GW has more than 1 4xx errors; 3 times
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, ApiGateway4XXErrorAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: 4XXError
      Dimensions:
        - Name: ApiName
          Value: !Join ['-', [!Ref Stage, '${self:service}']]
      Namespace: AWS/ApiGateway
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Unit: Count
  ApiGatewayLatencyAlarm:
    DependsOn: ApiGatewayRestApi
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmDescription: Alarm when Api GW average latency is more than 3s; 2 times
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, ApiGatewayLatencyAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      MetricName: Latency
      Dimensions:
        - Name: ApiName
          Value: !Join ['-', [!Ref Stage, '${self:service}']]
      Namespace: AWS/ApiGateway
      Period: 60
      Statistic: Average
      Threshold: 3000
      TreatMissingData: notBreaching
      Unit: Milliseconds
  ClusterStatusRedAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, FhirESClusterStatusRedAlarm]]
      AlarmDescription: 'Primary and replica shards of at least one index are not allocated to nodes in a cluster.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: 'ClusterStatus.red'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Maximum
      Threshold: 0
  ClusterStatusYellowAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Condition: isNotDev
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterStatusYellowAlarm]]
      AlarmDescription: 'Replica shards for at least one index are not allocated to 2 nodes in a cluster.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: 'ClusterStatus.yellow'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Maximum
      Threshold: 0
  ClusterCPUUtilizationTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, FhirESClusterCPUUtilAlarm]]
      AlarmDescription: 'Average CPU utilization over last 10 minutes too high.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'CPUUtilization'
      Namespace: 'AWS/ES'
      Period: 600
      Statistic: Average
      Threshold: 80
  ClusterMasterCPUUtilizationTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Condition: isNotDev
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterMasterCPUUtilAlarm]]
      AlarmDescription: 'Average CPU utilization over last 10 minutes too high.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'MasterCPUUtilization'
      Namespace: 'AWS/ES'
      Period: 600
      Statistic: Average
      Threshold: 50
  ClusterFreeStorageSpaceTooLowAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterFreeStorageSpaceTooLowAlarm]]
      AlarmDescription: 'Cluster is running out of storage space.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'FreeStorageSpace'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Minimum
      Threshold: !If [isDev, 2500, 22500] # in MB; aiming for alarm at 25% remaining
  ClusterIndexWritesBlockedTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterIndexWritesBlockedTooHighAlarm]]
      AlarmDescription: 'Cluster is blocking incoming write requests.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'ClusterIndexWritesBlocked'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Maximum
      Threshold: 0
  ClusterJVMMemoryPressureTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterJVMMemoryAlarm]]
      AlarmDescription: 'Average JVM memory pressure over last 10 minutes too high.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'JVMMemoryPressure'
      Namespace: 'AWS/ES'
      Period: 600
      Statistic: Average
      Threshold: 80
  ClusterMasterJVMMemoryPressureTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Condition: isNotDev
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterMasterJVMMemoryAlarm]]
      AlarmDescription: 'Average JVM memory pressure over last 10 minutes too high.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'MasterJVMMemoryPressure'
      Namespace: 'AWS/ES'
      Period: 600
      Statistic: Average
      Threshold: 80
  ClusterMasterNotReachableFromNodeAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Condition: isNotDev
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterMasterNotReachableFromNodeAlarm]]
      AlarmDescription: 'Master node stopped or not reachable. Usually the result of a network connectivity issue or AWS dependency problem.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 5
      MetricName: 'MasterReachableFromNode'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Minimum
      Threshold: 1
  ClusterAutomatedSnapshotFailureTooHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Condition: isNotDev
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterSnapshotFailureAlarm]]
      AlarmDescription: 'No automated snapshot was taken for the domain in the previous 36 hours.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'AutomatedSnapshotFailure'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Maximum
      Threshold: 0
  ClusterKibanaHealthyNodesTooLowAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Condition: isDev
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, FhirESClusterKibanaAlarm]]
      AlarmDescription: 'Kibana is inaccessible.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: 'KibanaHealthyNodes'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Minimum
      Threshold: 1
  ClusterKMSKeyErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, FhirESClusterKMSErrorAlarm]]
      AlarmDescription: 'KMS customer master key used to encrypt data at rest has been disabled.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'KMSKeyError'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Maximum
      Threshold: 0
  ClusterKMSKeyInaccessibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: 'We want to explicitly create an alarm name'
    Properties:
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, FhirESClusterKMSInaccessibleAlarm]]
      AlarmDescription: 'KMS customer master key used to encrypt data at rest has been deleted or revoked its grants to Amazon ES.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref AWS::AccountId
        - Name: DomainName
          Value: !Ref ElasticSearchDomain
      EvaluationPeriods: 1
      MetricName: 'KMSKeyInaccessible'
      Namespace: 'AWS/ES'
      Period: 60
      Statistic: Maximum
      Threshold: 0
  DDBTFirehoseErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm when the Firehose Stream errors is more than 1 unit for 15 minutes out of the past 25 minutes.
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, DDBToFirehoseLambdaErrorAlarm]]
      ActionsEnabled: False
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref DdbToFirehoseLambdaFunction
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Unit: Count
  ArchiveDeliveryStreamCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm when the archive firehose delivery stream putRecord(s) success count is 2 standard deviations lower in 1 day.
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, Low, ArchiveDeliveryStreamCountAlarm]]
      ActionsEnabled: False
      ComparisonOperator: LessThanLowerThreshold
      EvaluationPeriods: 3
      DatapointsToAlarm: 1
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              MetricName: PutRecords.Success
              Namespace: AWS/Kinesis
              Dimensions:
                - Name: StreamName
                  Value: !Ref ArchiveDeliveryStream
            Period: 300
            Stat: Sum
            Unit: Count
        - Id: ad1
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
          Label: PutRecords.Success (expected
          ReturnData: true
  
  # cloudwatch synthetic support
  MetadataCanary:
    Type: AWS::Synthetics::Canary
    Properties:
      ArtifactS3Location: !Join ['', ['s3://', !Ref SyntheticsBucket, '/', !Join ['', [!Ref Stage, ig, canary]]]]
      Code:
        Handler: 'index.handler'
        Script: |
          var synthetics = require('Synthetics');
          const log = require('SyntheticsLogger');

          const apiCanaryBlueprint = async function () {
    
            // Handle validation for positive scenario
            const validateSuccessful = async function(res) {
              return new Promise((resolve) => {
                  if (res.statusCode < 200 || res.statusCode > 299) {
                      throw res.statusCode + ' ' + res.statusMessage;
                  }
          
                  res.on('end', () => {
                      // Add validation on 'responseBody' here if required.
                      resolve();
                  });
              });
            };
    

            // Set request option for Verify /metadata
            const path = "/" + process.env.STAGE + "/metadata";
            const requestOptionsStep1 = {
                hostname: process.env.HOST_NAME,
                method: 'GET',
                path: path,
                port: '443',
                protocol: 'https:',
                body: "",
                headers: {}
            };
            requestOptionsStep1['headers']['User-Agent'] = [synthetics.getCanaryUserAgentString(), requestOptionsStep1['headers']['User-Agent']].join(' ');

            // Set step config option for Verify /metadata
            let stepConfig1 = {
                  includeRequestHeaders: false,
                  includeResponseHeaders: false,
                  includeRequestBody: false,
                  includeResponseBody: false,
                  restrictedHeaders: [],
                  continueOnHttpStepFailure: false
              };

              await synthetics.executeHttpStep('Verify /metadata', requestOptionsStep1, validateSuccessful, stepConfig1);              
          };

          exports.handler = async () => {
              return await apiCanaryBlueprint();
          };
      ExecutionRoleArn: !GetAtt SyntheticsRole.Arn
      Name: !Join ['-', [!Ref Stage, metadata, ping]]
      RunConfig:
        ActiveTracing: true
        EnvironmentVariables:
          HOST_NAME: !Join ['', [!Ref ApiGatewayRestApi, !Sub '.execute-api.${AWS::Region}.amazonaws.com']]
          STAGE: !Ref Stage
        TimeoutInSeconds: 90
      RuntimeVersion: 'syn-nodejs-puppeteer-3.1'
      Schedule:
        Expression: rate(15 minutes)
      StartCanaryAfterCreation: true
  MetadataCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm when the ig synthetic canary call fails
      AlarmName: !Join ['.', [FhirSolution, !Ref Stage, High, MetadataPingCanaryFailedAlarm]]
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: CanaryName
          Value: !Join ['-', [!Ref Stage, metadata, ping]]
      EvaluationPeriods: 1
      MetricName: 'Failed'
      Namespace: 'CloudWatchSynthetics'
      Period: 900
      Statistic: Maximum
      Threshold: 0
      TreatMissingData: notBreaching